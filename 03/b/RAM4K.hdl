// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address[0..2], a=first, b=second, c=third, d=fourth, e=fifth, f=sixth, g=seventh, h=eighth);
    RAM512 (in=in, load=first, address=address[3..11], out=reg1);
    RAM512 (in=in, load=second, address=address[3..11], out=reg2);
    RAM512 (in=in, load=third, address=address[3..11], out=reg3);
    RAM512 (in=in, load=fourth, address=address[3..11], out=reg4);
    RAM512 (in=in, load=fifth, address=address[3..11], out=reg5);
    RAM512 (in=in, load=sixth, address=address[3..11], out=reg6);
    RAM512 (in=in, load=seventh, address=address[3..11], out=reg7);
    RAM512 (in=in, load=eighth, address=address[3..11], out=reg8);
    Mux8Way16 (a=reg1, b=reg2, c=reg3, d=reg4, e=reg5, f=reg6, g=reg7, h=reg8, sel=address[0..2], out=out);
}
